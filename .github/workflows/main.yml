name: Unity GameCI
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  testRunner:
    name: Test in Unity
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-

      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: .
          unityVersion: 2022.3.25f1
          testMode: all
          artifactsPath: test-results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport'
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results
          path: test-results

  buildWindows:
    needs: testRunner
    name: Build for Windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-build-StandaloneWindows64
          restore-keys: Library-build-

      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: .
          unityVersion: 2022.3.25f1
          targetPlatform: StandaloneWindows64
          allowDirtyBuild: true

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: build-StandaloneWindows64
          path: build/StandaloneWindows64
